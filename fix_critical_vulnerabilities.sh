#!/bin/bash

echo "üîß Iniciando corre√ß√£o de vulnerabilidades cr√≠ticas em todo o projeto..."

# Diret√≥rio raiz do projeto
PROJECT_ROOT="/workspace/UberCms"

# Fun√ß√£o para fazer backup
backup_file() {
    local file="$1"
    if [ ! -f "$file.security_backup" ]; then
        cp "$file" "$file.security_backup"
        echo "‚úÖ Backup criado: $(basename $file).security_backup"
    fi
}

# Fun√ß√£o para corrigir um arquivo
fix_file() {
    local file="$1"
    echo "üîß Corrigindo: $file"
    
    backup_file "$file"
    
    # Substituir fun√ß√µes MySQL depreciadas
    sed -i 's/mysql_query(/Db::query(/g' "$file"
    sed -i 's/mysql_fetch_assoc(/->fetch(PDO::FETCH_ASSOC)/g' "$file"
    sed -i 's/mysql_fetch_array(/->fetch(PDO::FETCH_ASSOC)/g' "$file"
    sed -i 's/mysql_num_rows(/->rowCount(/g' "$file"
    sed -i 's/mysql_result(/->fetchColumn(/g' "$file"
    sed -i 's/mysql_real_escape_string(/htmlspecialchars(/g' "$file"
    
    # Remover or die(mysql_error())
    sed -i 's/ or die(mysql_error());//g' "$file"
    sed -i 's/ or die(mysql_error())//g' "$file"
    
    # Corrigir sintaxe problem√°tica
    sed -i 's/->fetch(PDO::FETCH_ASSOC)\$\([^)]*\))/\$\1->fetch(PDO::FETCH_ASSOC)/g' "$file"
    sed -i 's/->rowCount(\$\([^)]*\))/\$\1->rowCount()/g' "$file"
    sed -i 's/->fetchColumn(\$\([^)]*\))/\$\1->fetchColumn()/g' "$file"
    
    echo "‚úÖ Arquivo corrigido: $file"
}

# Encontrar e corrigir arquivos cr√≠ticos
echo "üìã Procurando arquivos com vulnerabilidades cr√≠ticas..."

# Arquivos mais vulner√°veis identificados na auditoria
CRITICAL_FILES=(
    "includes/core.php"
    "profile-grupos.php"
    "includes/functions.php"
    "helper.php"
    "rss.php"
    "article.php"
    "nucleo/class.grupos.php"
    "nucleo/class.rooms.php"
    "manage/pages/roomads.php"
)

for file in "${CRITICAL_FILES[@]}"; do
    full_path="$PROJECT_ROOT/$file"
    if [ -f "$full_path" ]; then
        fix_file "$full_path"
    else
        echo "‚ö†Ô∏è  Arquivo n√£o encontrado: $file"
    fi
done

# Corrigir todos os arquivos PHP que ainda cont√™m mysql_query
echo "üîç Procurando outros arquivos com mysql_query..."
find "$PROJECT_ROOT" -name "*.php" -type f -exec grep -l "mysql_query" {} \; | while read file; do
    # Pular arquivos de backup
    if [[ "$file" != *".backup"* ]] && [[ "$file" != *".security_backup"* ]]; then
        fix_file "$file"
    fi
done

echo ""
echo "‚úÖ Corre√ß√£o de vulnerabilidades cr√≠ticas conclu√≠da!"
echo "üìä Resumo das corre√ß√µes aplicadas:"
echo "   - mysql_query() ‚Üí Db::query()"
echo "   - mysql_fetch_*() ‚Üí PDO methods"
echo "   - Remo√ß√£o de or die(mysql_error())"
echo "   - Corre√ß√£o de sintaxe problem√°tica"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE:"
echo "   - Backups foram criados com extens√£o .security_backup"
echo "   - Teste todos os endpoints ap√≥s as corre√ß√µes"
echo "   - Implemente valida√ß√£o de entrada adicional"
echo "   - Considere usar prepared statements em queries complexas"